system:

 sensor: 
    - platform: time_date
      display_options:
          - 'time'
          - 'date'
          - 'time_date'
    
    - platform: systemmonitor
      resources:
        - type: processor_use
        - type: disk_use_percent
          arg: /
        - type: memory_use_percent
        - type: last_boot
        - type: disk_free
          arg: /
    
    - platform: command_line
      name: cpu_temp
      command: "cat /sys/devices/platform/coretemp.0/hwmon/hwmon1/temp2_input"
      unit_of_measurement: "°C"
      value_template: '{{ (value | multiply(0.001)) | round(1) }}'
   
    - platform: time_date
      display_options:
        - 'time'
        - 'date'
        - 'date_time'
        - 'time_date'

    - platform: command_line
      name: Workday
      command: >-
       curl https://isdayoff.ru/{{ now().date().strftime("%Y%m%d") }}
      scan_interval: 600


    - platform: command_line
      name: Workday Tomorrow
      command: >-
       curl https://isdayoff.ru/{{ (now().date() + timedelta(days=1)).strftime("%Y%m%d") }}
      scan_interval: 600

 
 template:
    binary_sensor:
      - name: Tod Day
        unique_id: tod_day
        state: >-
          {%- if is_state('binary_sensor.workday_sensor','on')%}{{states('input_datetime.day_start_workday') <= states('sensor.time') < states('input_datetime.day_end') }}
          {%- else %}{{states('input_datetime.day_start_holiday') <= states('sensor.time') < states('input_datetime.day_end') }}
          {%- endif%}
        icon: >
          {% if is_state('binary_sensor.tod_day','on') %}
          mdi:brightness-5
          {% else %}
          mdi:weather-night
          {% endif %}
        
 automation:
    - alias: completed torrent
      trigger:
        platform: event
        event_type: transmission_downloaded_torrent
      action:
        service: notify.telegram_chat
        data:
           message: "Загрузка торрента завершена: {{trigger.event.data.name}}"
           
        
 script:        
  manual_hassio_restart:
    alias: Hass.io Restart
    sequence:
      - alias: Restart
        service: homeassistant.restart
        
  manual_hassio_host_restart:
    alias: Host Restart
    sequence:
      - alias: Host Restart
        service: hassio.host_reboot    
        
        